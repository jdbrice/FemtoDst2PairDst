//
// File generated by rootcint at Wed Nov 15 15:43:24 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME modulesdIPairDstFormatdIDictionaryFemtoPair
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DictionaryFemtoPair.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void FemtoPair_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoPair(void *p = 0);
   static void *newArray_FemtoPair(Long_t size, void *p);
   static void delete_FemtoPair(void *p);
   static void deleteArray_FemtoPair(void *p);
   static void destruct_FemtoPair(void *p);
   static void streamer_FemtoPair(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoPair*)
   {
      ::FemtoPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoPair >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoPair", ::FemtoPair::Class_Version(), "/home/jdb12/work/FemtoDst2PairDst/modules/PairDstFormat//FemtoPair.h", 7,
                  typeid(::FemtoPair), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoPair::Dictionary, isa_proxy, 0,
                  sizeof(::FemtoPair) );
      instance.SetNew(&new_FemtoPair);
      instance.SetNewArray(&newArray_FemtoPair);
      instance.SetDelete(&delete_FemtoPair);
      instance.SetDeleteArray(&deleteArray_FemtoPair);
      instance.SetDestructor(&destruct_FemtoPair);
      instance.SetStreamerFunc(&streamer_FemtoPair);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoPair*)
   {
      return GenerateInitInstanceLocal((::FemtoPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr FemtoPair::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoPair::Class_Name()
{
   return "FemtoPair";
}

//______________________________________________________________________________
const char *FemtoPair::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoPair*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoPair::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoPair*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoPair::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoPair*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoPair::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoPair*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void FemtoPair::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoPair.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      FemtoDstBranch::Streamer(R__b);
      R__b >> mVertexZ;
      R__b >> mGRefMult;
      R__b >> mChargeSum;
      R__b >> mPt;
      R__b >> mEta;
      R__b >> mPhi;
      R__b >> mMass;
      R__b >> mRapidity;
      R__b >> d1_mDeltaY;
      R__b >> d1_mDeltaZ;
      R__b >> d1_mDeltaTimeOfFlight;
      R__b >> d1_mMatchFlag;
      R__b >> d1_mTriggerFlag;
      R__b >> d1_mCell;
      R__b >> d1_mModule;
      R__b >> d1_mBackleg;
      R__b >> d1_mPt;
      R__b >> d1_mEta;
      R__b >> d1_mPhi;
      R__b >> d1_mId;
      R__b >> d1_mNHitsFit;
      R__b >> d1_mNHitsMax;
      R__b >> d1_mNHitsDedx;
      R__b >> d1_mNSigmaPion;
      R__b >> d1_mDCA;
      R__b >> d1_mPid;
      R__b >> d2_mDeltaY;
      R__b >> d2_mDeltaZ;
      R__b >> d2_mDeltaTimeOfFlight;
      R__b >> d2_mMatchFlag;
      R__b >> d2_mTriggerFlag;
      R__b >> d2_mCell;
      R__b >> d2_mModule;
      R__b >> d2_mBackleg;
      R__b >> d2_mPt;
      R__b >> d2_mEta;
      R__b >> d2_mPhi;
      R__b >> d2_mId;
      R__b >> d2_mNHitsFit;
      R__b >> d2_mNHitsMax;
      R__b >> d2_mNHitsDedx;
      R__b >> d2_mNSigmaPion;
      R__b >> d2_mDCA;
      R__b >> d2_mPid;
      R__b.CheckByteCount(R__s, R__c, FemtoPair::IsA());
   } else {
      R__c = R__b.WriteVersion(FemtoPair::IsA(), kTRUE);
      FemtoDstBranch::Streamer(R__b);
      R__b << mVertexZ;
      R__b << mGRefMult;
      R__b << mChargeSum;
      R__b << mPt;
      R__b << mEta;
      R__b << mPhi;
      R__b << mMass;
      R__b << mRapidity;
      R__b << d1_mDeltaY;
      R__b << d1_mDeltaZ;
      R__b << d1_mDeltaTimeOfFlight;
      R__b << d1_mMatchFlag;
      R__b << d1_mTriggerFlag;
      R__b << d1_mCell;
      R__b << d1_mModule;
      R__b << d1_mBackleg;
      R__b << d1_mPt;
      R__b << d1_mEta;
      R__b << d1_mPhi;
      R__b << d1_mId;
      R__b << d1_mNHitsFit;
      R__b << d1_mNHitsMax;
      R__b << d1_mNHitsDedx;
      R__b << d1_mNSigmaPion;
      R__b << d1_mDCA;
      R__b << d1_mPid;
      R__b << d2_mDeltaY;
      R__b << d2_mDeltaZ;
      R__b << d2_mDeltaTimeOfFlight;
      R__b << d2_mMatchFlag;
      R__b << d2_mTriggerFlag;
      R__b << d2_mCell;
      R__b << d2_mModule;
      R__b << d2_mBackleg;
      R__b << d2_mPt;
      R__b << d2_mEta;
      R__b << d2_mPhi;
      R__b << d2_mId;
      R__b << d2_mNHitsFit;
      R__b << d2_mNHitsMax;
      R__b << d2_mNHitsDedx;
      R__b << d2_mNSigmaPion;
      R__b << d2_mDCA;
      R__b << d2_mPid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void FemtoPair::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoPair.
      TClass *R__cl = ::FemtoPair::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVertexZ", &mVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGRefMult", &mGRefMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChargeSum", &mChargeSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPt", &mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEta", &mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMass", &mMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRapidity", &mRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mDeltaY", &d1_mDeltaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mDeltaZ", &d1_mDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mDeltaTimeOfFlight", &d1_mDeltaTimeOfFlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mMatchFlag", &d1_mMatchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mTriggerFlag", &d1_mTriggerFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mCell", &d1_mCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mModule", &d1_mModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mBackleg", &d1_mBackleg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mPt", &d1_mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mEta", &d1_mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mPhi", &d1_mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mId", &d1_mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mNHitsFit", &d1_mNHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mNHitsMax", &d1_mNHitsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mNHitsDedx", &d1_mNHitsDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mNSigmaPion", &d1_mNSigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mDCA", &d1_mDCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d1_mPid", &d1_mPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mDeltaY", &d2_mDeltaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mDeltaZ", &d2_mDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mDeltaTimeOfFlight", &d2_mDeltaTimeOfFlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mMatchFlag", &d2_mMatchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mTriggerFlag", &d2_mTriggerFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mCell", &d2_mCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mModule", &d2_mModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mBackleg", &d2_mBackleg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mPt", &d2_mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mEta", &d2_mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mPhi", &d2_mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mId", &d2_mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mNHitsFit", &d2_mNHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mNHitsMax", &d2_mNHitsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mNHitsDedx", &d2_mNHitsDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mNSigmaPion", &d2_mNSigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mDCA", &d2_mDCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d2_mPid", &d2_mPid);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoPair(void *p) {
      return  p ? new(p) ::FemtoPair : new ::FemtoPair;
   }
   static void *newArray_FemtoPair(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoPair[nElements] : new ::FemtoPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoPair(void *p) {
      delete ((::FemtoPair*)p);
   }
   static void deleteArray_FemtoPair(void *p) {
      delete [] ((::FemtoPair*)p);
   }
   static void destruct_FemtoPair(void *p) {
      typedef ::FemtoPair current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_FemtoPair(TBuffer &buf, void *obj) {
      ((::FemtoPair*)obj)->::FemtoPair::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::FemtoPair

/********************************************************
* modules/PairDstFormat/DictionaryFemtoPair.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDictionaryFemtoPair();

extern "C" void G__set_cpp_environmentDictionaryFemtoPair() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("FemtoPair.h");
  G__cpp_reset_tagtableDictionaryFemtoPair();
}
#include <new>
extern "C" int G__cpp_dllrevDictionaryFemtoPair() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FemtoPair */
static int G__DictionaryFemtoPair_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoPair[n];
     } else {
       p = new((void*) gvp) FemtoPair[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoPair;
     } else {
       p = new((void*) gvp) FemtoPair;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoPair*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoPair*) G__getstructoffset())->copy((FemtoPair*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoPair::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoPair::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoPair::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoPair::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoPair*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoPair::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoPair::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoPair::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictionaryFemtoPair_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoPair::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictionaryFemtoPair_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoPair(*(FemtoPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoPair G__TFemtoPair;
static int G__DictionaryFemtoPair_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoPair*) (soff+(sizeof(FemtoPair)*i)))->~G__TFemtoPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoPair*) (soff))->~G__TFemtoPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictionaryFemtoPair_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoPair* dest = (FemtoPair*) G__getstructoffset();
   *dest = *(FemtoPair*) libp->para[0].ref;
   const FemtoPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FemtoPair */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDictionaryFemtoPair {
 public:
  G__Sizep2memfuncDictionaryFemtoPair(): p(&G__Sizep2memfuncDictionaryFemtoPair::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDictionaryFemtoPair::*p)();
};

size_t G__get_sizep2memfuncDictionaryFemtoPair()
{
  G__Sizep2memfuncDictionaryFemtoPair a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDictionaryFemtoPair() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair))) {
     FemtoPair *G__Lderived;
     G__Lderived=(FemtoPair*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair),G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair),G__get_linked_tagnum(&G__DictionaryFemtoPairLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDictionaryFemtoPair() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FemtoPair */
static void G__setup_memvarFemtoPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair));
   { FemtoPair *p; p=(FemtoPair*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mVertexZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mVertexZ=",0,"Event VertexZ");
   G__memvar_setup((void*)((long)(&p->mGRefMult)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mGRefMult=",0,"global RefMult");
   G__memvar_setup((void*)((long)(&p->mChargeSum)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"mChargeSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mMass)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mRapidity)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mRapidity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mDeltaY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mDeltaY=",0,"DeltaY between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->d1_mDeltaZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mDeltaZ=",0,"DeltaZ between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->d1_mDeltaTimeOfFlight)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mDeltaTimeOfFlight=",0,"Difference between measured and expected time-of-flight");
   G__memvar_setup((void*)((long)(&p->d1_mMatchFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mMatchFlag=",0,"Matching flag indicating multiple matches");
   G__memvar_setup((void*)((long)(&p->d1_mTriggerFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mTriggerFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mCell)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mCell=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mModule)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mModule=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mBackleg)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mBackleg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mPt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mPt=",0,"primary track px");
   G__memvar_setup((void*)((long)(&p->d1_mEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mEta=",0,"primary track py");
   G__memvar_setup((void*)((long)(&p->d1_mPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mPhi=",0,"primary track pz");
   G__memvar_setup((void*)((long)(&p->d1_mId)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"d1_mId=",0,"track Id");
   G__memvar_setup((void*)((long)(&p->d1_mNHitsFit)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mNHitsFit=",0,"q*nHitsFit - TPC");
   G__memvar_setup((void*)((long)(&p->d1_mNHitsMax)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d1_mNHitsMax=",0,"nHitsMax - TPC");
   G__memvar_setup((void*)((long)(&p->d1_mNHitsDedx)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"d1_mNHitsDedx=",0,"nHitsDedx - TPC");
   G__memvar_setup((void*)((long)(&p->d1_mNSigmaPion)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mNSigmaPion=",0,"nsigmaPi * 100");
   G__memvar_setup((void*)((long)(&p->d1_mDCA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mDCA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d1_mPid)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d1_mPid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mDeltaY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mDeltaY=",0,"DeltaY between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->d2_mDeltaZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mDeltaZ=",0,"DeltaZ between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->d2_mDeltaTimeOfFlight)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mDeltaTimeOfFlight=",0,"Difference between measured and expected time-of-flight");
   G__memvar_setup((void*)((long)(&p->d2_mMatchFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mMatchFlag=",0,"Matching flag indicating multiple matches");
   G__memvar_setup((void*)((long)(&p->d2_mTriggerFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mTriggerFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mCell)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mCell=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mModule)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mModule=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mBackleg)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mBackleg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mPt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mPt=",0,"primary track px");
   G__memvar_setup((void*)((long)(&p->d2_mEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mEta=",0,"primary track py");
   G__memvar_setup((void*)((long)(&p->d2_mPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mPhi=",0,"primary track pz");
   G__memvar_setup((void*)((long)(&p->d2_mId)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"d2_mId=",0,"track Id");
   G__memvar_setup((void*)((long)(&p->d2_mNHitsFit)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mNHitsFit=",0,"q*nHitsFit - TPC");
   G__memvar_setup((void*)((long)(&p->d2_mNHitsMax)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"d2_mNHitsMax=",0,"nHitsMax - TPC");
   G__memvar_setup((void*)((long)(&p->d2_mNHitsDedx)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"d2_mNHitsDedx=",0,"nHitsDedx - TPC");
   G__memvar_setup((void*)((long)(&p->d2_mNSigmaPion)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mNSigmaPion=",0,"nsigmaPi * 100");
   G__memvar_setup((void*)((long)(&p->d2_mDCA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mDCA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d2_mPid)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"d2_mPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryFemtoPairLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDictionaryFemtoPair() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFemtoPair(void) {
   /* FemtoPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoPair",903,G__DictionaryFemtoPair_169_0_2, 105, G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__DictionaryFemtoPair_169_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__DictionaryFemtoPair_169_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoPair' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictionaryFemtoPair_169_0_5, 85, G__get_linked_tagnum(&G__DictionaryFemtoPairLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoPair::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictionaryFemtoPair_169_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoPair::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictionaryFemtoPair_169_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoPair::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictionaryFemtoPair_169_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoPair::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryFemtoPairLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictionaryFemtoPair_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictionaryFemtoPair_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoPair::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictionaryFemtoPair_169_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoPair::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictionaryFemtoPair_169_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoPair::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictionaryFemtoPair_169_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoPair::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoPair", 903, G__DictionaryFemtoPair_169_0_17, (int) ('i'), G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair), -1, 0, 1, 1, 1, 0, "u 'FemtoPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoPair", 1029, G__DictionaryFemtoPair_169_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictionaryFemtoPair_169_0_19, (int) ('u'), G__get_linked_tagnum(&G__DictionaryFemtoPairLN_FemtoPair), -1, 1, 1, 1, 1, 0, "u 'FemtoPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDictionaryFemtoPair() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDictionaryFemtoPair() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDictionaryFemtoPair() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictionaryFemtoPairLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_FemtoDstBranch = { "FemtoDstBranch" , 99 , -1 };
G__linked_taginfo G__DictionaryFemtoPairLN_FemtoPair = { "FemtoPair" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDictionaryFemtoPair() {
  G__DictionaryFemtoPairLN_TClass.tagnum = -1 ;
  G__DictionaryFemtoPairLN_TBuffer.tagnum = -1 ;
  G__DictionaryFemtoPairLN_TMemberInspector.tagnum = -1 ;
  G__DictionaryFemtoPairLN_TObject.tagnum = -1 ;
  G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryFemtoPairLN_FemtoDstBranch.tagnum = -1 ;
  G__DictionaryFemtoPairLN_FemtoPair.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDictionaryFemtoPair() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_FemtoDstBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryFemtoPairLN_FemtoPair),sizeof(FemtoPair),-1,29952,(char*)NULL,G__setup_memvarFemtoPair,G__setup_memfuncFemtoPair);
}
extern "C" void G__cpp_setupDictionaryFemtoPair(void) {
  G__check_setup_version(30051515,"G__cpp_setupDictionaryFemtoPair()");
  G__set_cpp_environmentDictionaryFemtoPair();
  G__cpp_setup_tagtableDictionaryFemtoPair();

  G__cpp_setup_inheritanceDictionaryFemtoPair();

  G__cpp_setup_typetableDictionaryFemtoPair();

  G__cpp_setup_memvarDictionaryFemtoPair();

  G__cpp_setup_memfuncDictionaryFemtoPair();
  G__cpp_setup_globalDictionaryFemtoPair();
  G__cpp_setup_funcDictionaryFemtoPair();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDictionaryFemtoPair();
  return;
}
class G__cpp_setup_initDictionaryFemtoPair {
  public:
    G__cpp_setup_initDictionaryFemtoPair() { G__add_setup_func("DictionaryFemtoPair",(G__incsetup)(&G__cpp_setupDictionaryFemtoPair)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDictionaryFemtoPair() { G__remove_setup_func("DictionaryFemtoPair"); }
};
G__cpp_setup_initDictionaryFemtoPair G__cpp_setup_initializerDictionaryFemtoPair;

